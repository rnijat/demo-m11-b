openapi: 3.0.0
info:
  title: Authentication and Payment API
  version: 1.0.0
  description: API for handling user authentication and payment creation
paths:
  /auth/sign-in:
    post:
      tags:
        - Auth
      summary: Sign in to the application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPayload'
      responses:
        200:
          description: Sign-in successful, access token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                  message:
                    type: string
                    example: OK
                  status:
                    type: integer
                    example: 200
        404:
          description: User not found or invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/sign-out:
    get:
      tags:
        - Auth
      summary: Sign out of the application
      security:
        - bearerAuth: []
      responses:
        200:
          description: Sign-out successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/refresh:
    post:
      tags:
        - Auth
      summary: Refresh the access token
      responses:
        200:
          description: Access token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        401:
          description: Invalid or missing refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /payment/create:
    post:
      tags:
        - Payment
      summary: Create a new payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentPayload'
      responses:
        200:
          description: Payment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, user not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    SignInPayload:
      type: object
      required:
        - gsmNumber
        - password
      properties:
        gsmNumber:
          type: string
          example: '+994555555555'
        password:
          type: string
          example: 'password123'
    PaymentPayload:
      type: object
      required:
        - amount
      properties:
        amount:
          type: number
          example: 100
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
        data:
          type: object
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
